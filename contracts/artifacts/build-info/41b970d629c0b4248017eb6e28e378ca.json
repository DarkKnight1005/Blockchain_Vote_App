{
	"id": "41b970d629c0b4248017eb6e28e378ca",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tutorial_test.sol": {
				"content": "pragma solidity >=0.7.0 <0.9.0;\n\ncontract MyContract{\n    string str;\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/tutorial_test.sol": {
				"MyContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tutorial_test.sol\":33:71  contract MyContract{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tutorial_test.sol\":33:71  contract MyContract{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200b20e211a359e6d13c9a1e1d036836de2ed0591604910a45d57762d83c33b26564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212200b20e211a359e6d13c9a1e1d036836de2ed0591604910a45d57762d83c33b26564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND KECCAK256 0xE2 GT LOG3 MSIZE 0xE6 0xD1 EXTCODECOPY SWAP11 0x1E SAR SUB PUSH9 0x36DE2ED0591604910A GASLIMIT 0xD5 PUSH24 0x62D83C33B26564736F6C6343000807003300000000000000 ",
							"sourceMap": "33:38:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212200b20e211a359e6d13c9a1e1d036836de2ed0591604910a45d57762d83c33b26564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND KECCAK256 0xE2 GT LOG3 MSIZE 0xE6 0xD1 EXTCODECOPY SWAP11 0x1E SAR SUB PUSH9 0x36DE2ED0591604910A GASLIMIT 0xD5 PUSH24 0x62D83C33B26564736F6C6343000807003300000000000000 ",
							"sourceMap": "33:38:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 33,
									"end": 71,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b20e211a359e6d13c9a1e1d036836de2ed0591604910a45d57762d83c33b26564736f6c63430008070033",
									".code": [
										{
											"begin": 33,
											"end": 71,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 33,
											"end": 71,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33,
											"end": 71,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33,
											"end": 71,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33,
											"end": 71,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33,
											"end": 71,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tutorial_test.sol\":\"MyContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tutorial_test.sol\":{\"keccak256\":\"0x50b61abaaa96547fba9b356827f356e35a3f998fd96bc5db572067c02338b187\",\"urls\":[\"bzz-raw://7723d53ff26f2a5836f9bcae9577b5b750915c2fbce5a210346cf2979dccb131\",\"dweb:/ipfs/QmPAxKrrT9xNzUpLZsT7Su8JR6CMvR6s7ZJL6NjPghDxBr\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/tutorial_test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/tutorial_test.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/tutorial_test.sol": {
				"ast": {
					"absolutePath": "contracts/tutorial_test.sol",
					"exportedSymbols": {
						"MyContract": [
							4
						]
					},
					"id": 5,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 4,
							"linearizedBaseContracts": [
								4
							],
							"name": "MyContract",
							"nameLocation": "42:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "str",
									"nameLocation": "65:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 4,
									"src": "58:10:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "58:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 5,
							"src": "33:38:0",
							"usedErrors": []
						}
					],
					"src": "0:71:0"
				},
				"id": 0
			}
		}
	}
}